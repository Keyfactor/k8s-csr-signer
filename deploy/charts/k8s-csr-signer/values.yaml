# Default values for k8s-csr-signer.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

image:
  repository: ""
  tag: ""
  pullPolicy: IfNotPresent

command:
  # Name of the secret containing Command credentials
  # If this secret is of type kubernetes.io/basic-auth, the signer will use BasicAuth for authentication to Command.
  # Future Auth methods to Command will be supported by adding additional secret types.
  credsSecretName: ""

  # Name of the configmap containing Command configuration.
  configMapName: ""

  # Name of the configmap containing the Command API CA certificate.
  # If this name is blank, the signer assumes that the Command API
  # is using a certificate signed by a trusted CA.
  caCertConfigmapName: ""

  # Signer names that this signer will respond to. The ClusterRole will set each signer
  # as resource names with verb "sign".
  # Signer names must be absolute and not contain wildcards or the signer will interpret
  # them as foreign in scope.
  signerNames: []

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "command-k8s"

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
